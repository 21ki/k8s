apiVersion: rbac.authorization.k8s.io/v1 
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1 
kind: ClusterRole 
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-k8s
  namespace: monitoring
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus-k8s
  namespace: monitoring
  labels:
    app: prometheus
    component: k8s
spec:
  replicas: 3
  selector:
    matchLabels:
      app: prometheus
      component: k8s
  serviceName: prometheus-k8s
  template:
    metadata:
      name: prometheus-main
      labels:
        app: prometheus
        component: k8s
    spec:
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccount: prometheus-k8s
      serviceAccountName: prometheus-k8s
      containers:
      - name: prometheus
        image: prom/prometheus:v2.14.0
        args:
          - --web.console.templates=/etc/prometheus/consoles
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --config.file=/etc/prometheus/prometheus.yaml
          - --storage.tsdb.path=/prometheus
          - --storage.tsdb.retention=7d
          - --web.enable-lifecycle
          - --storage.tsdb.no-lockfile
          - --web.route-prefix=/
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /-/healthy
            port: webui
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        ports:
        - name: webui
          containerPort: 9090
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /-/ready
            port: webui
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          requests:
            cpu: 1000m
            memory: 4096M
          limits:
            cpu: 1000m
            memory: 4096M
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: rules-volume
          mountPath: /etc/prometheus-rules
        - name: prometheus-data
          mountPath: /prometheus/
        - name: etcd-certs
          mountPath: /certs
        - name: istio-certs
          mountPath: /etc/istio-certs            
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-k8s
      - name: rules-volume
        configMap:
          name: prometheus-rules
      - name: etcd-certs
        secret:
          secretName: etcd-certs
      - name: istio-certs
        secret:
          defaultMode: 420
          optional: true
          secretName: istio-certs
  volumeClaimTemplates:
  - metadata:
      name: prometheus-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  labels:
    prometheus: k8s
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/affinity: "true"
    traefik.ingress.kubernetes.io/load-balancer-method: drr
  name: prometheus-k8s
  namespace: monitoring
spec:
  ports:
  - name: webui
    port: 9090
    targetPort: webui
  selector:
    app: prometheus
    component: k8s
  sessionAffinity: ClientIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    operated-prometheus: "true"
  name: prometheus-operated
  namespace: monitoring
  annotations:
    prometheus.io/port: "9090"
    prometheus.io/scrape: 'true'
spec:
  clusterIP: None
  ports:
  - name: webui
    port: 9090
    protocol: TCP
    targetPort: webui
  selector:
    app: prometheus
    component: k8s
  sessionAffinity: None
  type: ClusterIP
