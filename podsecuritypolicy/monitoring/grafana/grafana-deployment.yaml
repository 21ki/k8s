apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: monitoring
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: psp.grafana.unprivileged
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
spec:
  volumes:
    - secret
    - configMap
    - persistentVolumeClaim
  readOnlyRootFilesystem: true
  # Users and groups
  runAsUser:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  # SELinux
  seLinux:
    # SELinux is unused in CaaSP
    rule: 'RunAsAny'
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: grafana
  namespace: monitoring
rules:
  - apiGroups: ['policy']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames: ['psp.grafana.unprivileged']
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: grafana
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: grafana
subjects:
  - kind: ServiceAccount
    name: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-k8s
  namespace: monitoring
  labels:
    app: grafana
    component: k8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      component: k8s
  template:
    metadata:
      labels:
        app: grafana
        component: k8s
    spec:
      serviceAccount: grafana
      containers:
      - image: grafana/grafana
        imagePullPolicy: IfNotPresent
        name: grafana-k8s
        #imagePullPolicy: IfNotPresent
        # env:
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 200m
            memory: 2048Mi
          requests:
            cpu: 200m
            memory: 2048Mi
        env:
          # The following env variables set up basic auth twith the default admin user and admin password.
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
          # - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          #   value: Admin
          # does not really work, because of template variables in exported dashboards:
          # - name: GF_DASHBOARDS_JSON_ENABLED
          #   value: "true"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
          # initialDelaySeconds: 30
          # timeoutSeconds: 1
        volumeMounts:
        - name: grafana-etc-volume
          mountPath: /etc/grafana/
        - name: grafana-settings
          mountPath: /var/lib/grafana
      volumes:
        - name: grafana-etc-volume
          configMap:
            name: grafana-etc
        - name: grafana-settings
          persistentVolumeClaim:
            claimName: grafana-pvc
